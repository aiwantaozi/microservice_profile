// Code generated by protoc-gen-go.
// source: proto/profile/profile.proto
// DO NOT EDIT!

/*
Package proto_profile is a generated protocol buffer package.

It is generated from these files:
	proto/profile/profile.proto

It has these top-level messages:
	ProfileInstance
*/
package proto_profile

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProfileInstance_Sex int32

const (
	ProfileInstance_MALE   ProfileInstance_Sex = 0
	ProfileInstance_FEMALE ProfileInstance_Sex = 1
)

var ProfileInstance_Sex_name = map[int32]string{
	0: "MALE",
	1: "FEMALE",
}
var ProfileInstance_Sex_value = map[string]int32{
	"MALE":   0,
	"FEMALE": 1,
}

func (x ProfileInstance_Sex) String() string {
	return proto.EnumName(ProfileInstance_Sex_name, int32(x))
}
func (ProfileInstance_Sex) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type ProfileInstance struct {
	Weight         float32             `protobuf:"fixed32,1,opt,name=weight" json:"weight,omitempty"`
	Height         float32             `protobuf:"fixed32,2,opt,name=height" json:"height,omitempty"`
	Sex            ProfileInstance_Sex `protobuf:"varint,3,opt,name=sex,enum=proto.profile.ProfileInstance_Sex" json:"sex,omitempty"`
	DateOfBirthUtc int32               `protobuf:"varint,4,opt,name=dateOfBirthUtc" json:"dateOfBirthUtc,omitempty"`
	Uid            string              `protobuf:"bytes,5,opt,name=uid" json:"uid,omitempty"`
	XId            string              `protobuf:"bytes,6,opt,name=_id,json=id" json:"_id,omitempty"`
}

func (m *ProfileInstance) Reset()                    { *m = ProfileInstance{} }
func (m *ProfileInstance) String() string            { return proto.CompactTextString(m) }
func (*ProfileInstance) ProtoMessage()               {}
func (*ProfileInstance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterType((*ProfileInstance)(nil), "proto.profile.ProfileInstance")
	proto.RegisterEnum("proto.profile.ProfileInstance_Sex", ProfileInstance_Sex_name, ProfileInstance_Sex_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for ProfileService service

type ProfileServiceClient interface {
	ProfileInstancePost(ctx context.Context, opts ...grpc.CallOption) (ProfileService_ProfileInstancePostClient, error)
	ProfileInstanceGet(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (ProfileService_ProfileInstanceGetClient, error)
}

type profileServiceClient struct {
	cc *grpc.ClientConn
}

func NewProfileServiceClient(cc *grpc.ClientConn) ProfileServiceClient {
	return &profileServiceClient{cc}
}

func (c *profileServiceClient) ProfileInstancePost(ctx context.Context, opts ...grpc.CallOption) (ProfileService_ProfileInstancePostClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ProfileService_serviceDesc.Streams[0], c.cc, "/proto.profile.ProfileService/ProfileInstancePost", opts...)
	if err != nil {
		return nil, err
	}
	x := &profileServiceProfileInstancePostClient{stream}
	return x, nil
}

type ProfileService_ProfileInstancePostClient interface {
	Send(*ProfileInstance) error
	Recv() (*ProfileInstance, error)
	grpc.ClientStream
}

type profileServiceProfileInstancePostClient struct {
	grpc.ClientStream
}

func (x *profileServiceProfileInstancePostClient) Send(m *ProfileInstance) error {
	return x.ClientStream.SendMsg(m)
}

func (x *profileServiceProfileInstancePostClient) Recv() (*ProfileInstance, error) {
	m := new(ProfileInstance)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *profileServiceClient) ProfileInstanceGet(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (ProfileService_ProfileInstanceGetClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ProfileService_serviceDesc.Streams[1], c.cc, "/proto.profile.ProfileService/ProfileInstanceGet", opts...)
	if err != nil {
		return nil, err
	}
	x := &profileServiceProfileInstanceGetClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProfileService_ProfileInstanceGetClient interface {
	Recv() (*ProfileInstance, error)
	grpc.ClientStream
}

type profileServiceProfileInstanceGetClient struct {
	grpc.ClientStream
}

func (x *profileServiceProfileInstanceGetClient) Recv() (*ProfileInstance, error) {
	m := new(ProfileInstance)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for ProfileService service

type ProfileServiceServer interface {
	ProfileInstancePost(ProfileService_ProfileInstancePostServer) error
	ProfileInstanceGet(*google_protobuf1.Empty, ProfileService_ProfileInstanceGetServer) error
}

func RegisterProfileServiceServer(s *grpc.Server, srv ProfileServiceServer) {
	s.RegisterService(&_ProfileService_serviceDesc, srv)
}

func _ProfileService_ProfileInstancePost_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProfileServiceServer).ProfileInstancePost(&profileServiceProfileInstancePostServer{stream})
}

type ProfileService_ProfileInstancePostServer interface {
	Send(*ProfileInstance) error
	Recv() (*ProfileInstance, error)
	grpc.ServerStream
}

type profileServiceProfileInstancePostServer struct {
	grpc.ServerStream
}

func (x *profileServiceProfileInstancePostServer) Send(m *ProfileInstance) error {
	return x.ServerStream.SendMsg(m)
}

func (x *profileServiceProfileInstancePostServer) Recv() (*ProfileInstance, error) {
	m := new(ProfileInstance)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ProfileService_ProfileInstanceGet_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(google_protobuf1.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProfileServiceServer).ProfileInstanceGet(m, &profileServiceProfileInstanceGetServer{stream})
}

type ProfileService_ProfileInstanceGetServer interface {
	Send(*ProfileInstance) error
	grpc.ServerStream
}

type profileServiceProfileInstanceGetServer struct {
	grpc.ServerStream
}

func (x *profileServiceProfileInstanceGetServer) Send(m *ProfileInstance) error {
	return x.ServerStream.SendMsg(m)
}

var _ProfileService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.profile.ProfileService",
	HandlerType: (*ProfileServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ProfileInstancePost",
			Handler:       _ProfileService_ProfileInstancePost_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "ProfileInstanceGet",
			Handler:       _ProfileService_ProfileInstanceGet_Handler,
			ServerStreams: true,
		},
	},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("proto/profile/profile.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0xcf, 0x4a, 0xfb, 0x40,
	0x10, 0xc7, 0x7f, 0x9b, 0xb4, 0xe1, 0xe7, 0x80, 0x6d, 0x19, 0xb1, 0x84, 0x46, 0x24, 0xe4, 0x20,
	0xc1, 0xc3, 0xa6, 0x56, 0x4f, 0xde, 0x14, 0xaa, 0x08, 0x8a, 0x25, 0xc5, 0xb3, 0xa4, 0xcd, 0xb6,
	0x59, 0xa8, 0xd9, 0x90, 0x6c, 0x6b, 0xbd, 0xfa, 0x0a, 0x3e, 0x9a, 0x0f, 0xe0, 0xc5, 0x27, 0xf0,
	0x09, 0x24, 0xbb, 0xe9, 0xc1, 0x08, 0xf6, 0x34, 0x33, 0x9f, 0xf9, 0xf7, 0x85, 0x2f, 0x38, 0x59,
	0x2e, 0xa4, 0x08, 0xb2, 0x5c, 0xcc, 0xf8, 0x82, 0x6d, 0x22, 0x55, 0x14, 0x77, 0x55, 0xa0, 0x15,
	0xec, 0x1d, 0xcc, 0x85, 0x98, 0x2f, 0x58, 0x10, 0x65, 0x3c, 0x88, 0xd2, 0x54, 0xc8, 0x48, 0x72,
	0x91, 0x16, 0x7a, 0xb8, 0xe7, 0x54, 0x5d, 0x55, 0x4d, 0x96, 0xb3, 0x80, 0x3d, 0x65, 0xf2, 0x45,
	0x37, 0xbd, 0x0f, 0x02, 0xed, 0x91, 0x3e, 0x73, 0x93, 0x16, 0x32, 0x4a, 0xa7, 0x0c, 0xbb, 0x60,
	0x3d, 0x33, 0x3e, 0x4f, 0xa4, 0x4d, 0x5c, 0xe2, 0x1b, 0x61, 0x55, 0x95, 0x3c, 0xd1, 0xdc, 0xd0,
	0x5c, 0x57, 0x78, 0x06, 0x66, 0xc1, 0xd6, 0xb6, 0xe9, 0x12, 0xbf, 0x35, 0xf0, 0xe8, 0x0f, 0x6d,
	0xb4, 0x76, 0x9c, 0x8e, 0xd9, 0x3a, 0x2c, 0xc7, 0xf1, 0x08, 0x5a, 0x71, 0x24, 0xd9, 0xfd, 0xec,
	0x92, 0xe7, 0x32, 0x79, 0x90, 0x53, 0xbb, 0xe1, 0x12, 0xbf, 0x19, 0xd6, 0x28, 0x76, 0xc0, 0x5c,
	0xf2, 0xd8, 0x6e, 0xba, 0xc4, 0xdf, 0x09, 0xcb, 0x14, 0xdb, 0x60, 0x3e, 0xf2, 0xd8, 0xb6, 0x14,
	0x31, 0x78, 0xec, 0x39, 0x60, 0x8e, 0xd9, 0x1a, 0xff, 0x43, 0xe3, 0xee, 0xe2, 0x76, 0xd8, 0xf9,
	0x87, 0x00, 0xd6, 0xd5, 0x50, 0xe5, 0x64, 0xf0, 0x45, 0xa0, 0x55, 0x89, 0x18, 0xb3, 0x7c, 0xc5,
	0xa7, 0x0c, 0x57, 0xb0, 0x57, 0x93, 0x35, 0x12, 0x85, 0xc4, 0xc3, 0xbf, 0xa5, 0xf7, 0xb6, 0xf4,
	0x3d, 0xe7, 0xf5, 0xfd, 0xf3, 0xcd, 0xd8, 0xf7, 0x3a, 0xc1, 0xea, 0x24, 0x58, 0x16, 0x2c, 0xdf,
	0xb8, 0x76, 0x4e, 0x8e, 0x7d, 0xd2, 0x27, 0x98, 0x00, 0xd6, 0x76, 0xae, 0x99, 0xc4, 0x2e, 0xd5,
	0x06, 0xd1, 0x8d, 0x41, 0x74, 0x58, 0x1a, 0xb4, 0xf5, 0x9d, 0xad, 0xde, 0x21, 0xfe, 0x7a, 0xd7,
	0x27, 0x13, 0x4b, 0xad, 0x9e, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x20, 0x0e, 0xf0, 0x46, 0x46,
	0x02, 0x00, 0x00,
}
